fileFormatVersion: 2
guid: fb07876dbe0ca47bd8b0ac901bcb2066
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: "{\"source\":\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports,
    \\\"__esModule\\\", { value: true });\\r\\nconst ZEPETO_Script_1 = require(\\\"ZEPETO.Script\\\");\\r\\nconst
    ZEPETO_Multiplay_1 = require(\\\"ZEPETO.Multiplay\\\");\\r\\nconst CharacterEventChecker_1
    = require(\\\"./CharacterEventChecker\\\");\\r\\nconst ZEPETO_Multiplay_Schema_1
    = require(\\\"ZEPETO.Multiplay.Schema\\\");\\r\\nconst ZEPETO_Character_Controller_1
    = require(\\\"ZEPETO.Character.Controller\\\");\\r\\nconst UnityEngine = require(\\\"UnityEngine\\\");\\r\\nclass
    Starter extends ZEPETO_Script_1.ZepetoScriptBehaviour {\\r\\n    constructor()
    {\\r\\n        super(...arguments);\\r\\n        this.currentPlayers = new Map();\\r\\n       
    this.allowablePosDiff = 5;\\r\\n        this.MESSAGE_TYPE_ServerTimestamp = \\\"ServerTimestamp\\\";\\r\\n       
    this.MESSAGE_TYPE_OnBlockTriggerEnter = \\\"OnBlockTriggerEnter\\\";\\r\\n       
    this.MESSAGE_TYPE_OnCharacterLandedBlock = \\\"OnCharacterLandedBlock\\\";\\r\\n       
    this.MESSAGE_TYPE_OnCharacterJumpOnBlock = \\\"OnCharacterJumpOnBlock\\\";\\r\\n       
    this.MESSAGE_TYPE_OnTryJump = \\\"OnTryJump\\\";\\r\\n        this.MESSAGE_TYPE_OnPlatformState
    = \\\"OnPlatformState\\\";\\r\\n        this.MESSAGE_TYPE_OnFallTriggerEnter
    = \\\"OnFallTriggerEnter\\\";\\r\\n        this.MESSAGE_TYPE_OnTryJumpForMovingToBlock
    = \\\"OnTryJumpForMovingToBlock\\\";\\r\\n        this.MESSAGE_TYPE_OnLeavePlayer
    = \\\"OnLeavePlayer\\\";\\r\\n        this.MESSAGE_TYPE_ServerDayandNight = \\\"ServerDayandNight\\\";\\r\\n       
    this.MESSAGE_TYPE_OnDayandNight = \\\"OnDayandNight\\\";\\r\\n    }\\r\\n   
    Start() {\\r\\n        this.multiplay.add_RoomCreated((room) => {\\r\\n           
    this.room = room;\\r\\n            this.AddMessageHandlersForCharacterSync();\\r\\n       
    });\\r\\n        this.multiplay.add_RoomJoined((room) => {\\r\\n            room.add_OnStateChange(this.OnStateChange.bind(this));\\r\\n       
    });\\r\\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\\r\\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer.character.gameObject.AddComponent($typeof(CharacterEventChecker_1.default));\\r\\n       
    });\\r\\n        this.StartCoroutine(this.SendMessageLoop(0.1));\\r\\n    }\\r\\n   
    // Send the local character transform to the server at the scheduled Interval
    Time.\\r\\n    *SendMessageLoop(tick) {\\r\\n        while (true) {\\r\\n           
    yield new UnityEngine.WaitForSeconds(tick);\\r\\n            if (this.room !=
    null && this.room.IsConnected) {\\r\\n                //this.SendRotate(this.light.transform);\\r\\n               
    const hasPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(this.room.SessionId);\\r\\n               
    if (hasPlayer) {\\r\\n                    const myPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(this.room.SessionId);\\r\\n                   
    if (myPlayer.character.CurrentState != ZEPETO_Character_Controller_1.CharacterState.Idle)\\r\\n                       
    this.SendTransform(myPlayer.character.transform);\\r\\n                    this.SendTransform(this.light.transform);\\r\\n               
    }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    OnStateChange(state,
    isFirst) {\\r\\n        // When the first OnStateChange event is received, a
    full state snapshot is recorded.\\r\\n        if (isFirst) {\\r\\n           
    // [CharacterController] (Local) Called when the Player instance is fully loaded
    in Scene\\r\\n            ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedLocalPlayer.AddListener(()
    => {\\r\\n                const myPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.zepetoPlayer;\\r\\n               
    myPlayer.character.OnChangedState.AddListener((cur, prev) => {\\r\\n                   
    this.SendState(cur);\\r\\n                });\\r\\n            });\\r\\n           
    // [CharacterController] Called when the Player instance is fully loaded in Scene\\r\\n           
    ZEPETO_Character_Controller_1.ZepetoPlayers.instance.OnAddedPlayer.AddListener((sessionId)
    => {\\r\\n                const isLocal = this.room.SessionId === sessionId;\\r\\n               
    if (!isLocal) {\\r\\n                    const player = this.currentPlayers.get(sessionId);\\r\\n                   
    // [RoomState] Called whenever the state of the player instance is updated. \\r\\n                   
    player.add_OnChange((changeValues) => this.OnUpdatePlayer(sessionId, player));\\r\\n               
    }\\r\\n            });\\r\\n        }\\r\\n        let join = new Map();\\r\\n       
    let leave = new Map(this.currentPlayers);\\r\\n        state.players.ForEach((sessionId,
    player) => {\\r\\n            if (!this.currentPlayers.has(sessionId)) {\\r\\n               
    join.set(sessionId, player);\\r\\n            }\\r\\n            leave.delete(sessionId);\\r\\n       
    });\\r\\n        // [RoomState] Create a player instance for players that enter
    the Room\\r\\n        join.forEach((player, sessionId) => this.OnJoinPlayer(sessionId,
    player));\\r\\n        // [RoomState] Remove the player instance for players
    that exit the room\\r\\n        leave.forEach((player, sessionId) => this.OnLeavePlayer(sessionId,
    player));\\r\\n    }\\r\\n    OnJoinPlayer(sessionId, player) {\\r\\n       
    console.log(`[OnJoinPlayer] players - sessionId : ${sessionId}`);\\r\\n       
    this.currentPlayers.set(sessionId, player);\\r\\n        const spawnInfo = new
    ZEPETO_Character_Controller_1.SpawnInfo();\\r\\n        //player.transform.position.y
    = 3;\\r\\n        const position = this.ParseVector3(player.transform.position);
    // player.transform.position\\r\\n        const rotation = this.ParseVector3(player.transform.rotation);\\r\\n       
    spawnInfo.position = new UnityEngine.Vector3(98, 20, 881);\\r\\n        spawnInfo.rotation
    = UnityEngine.Quaternion.Euler(rotation);\\r\\n        const isLocal = this.room.SessionId
    === player.sessionId;\\r\\n        $extension(\\\"ZEPETO.Character.Controller.ZepetoPlayersExtension\\\").CreatePlayerWithUserId(ZEPETO_Character_Controller_1.ZepetoPlayers.instance,
    sessionId, player.zepetoUserId, spawnInfo, isLocal);\\r\\n    }\\r\\n    OnLeavePlayer(sessionId,
    player) {\\r\\n        console.log(`[OnRemove] players - sessionId : ${sessionId}`);\\r\\n       
    this.currentPlayers.delete(sessionId);\\r\\n        ZEPETO_Character_Controller_1.ZepetoPlayers.instance.RemovePlayer(sessionId);\\r\\n   
    }\\r\\n    OnUpdatePlayer(sessionId, player) {\\r\\n        const position =
    this.ParseVector3(player.transform.position);\\r\\n        const zepetoPlayer
    = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId);\\r\\n       
    zepetoPlayer.character.MoveToPosition(position);\\r\\n        //this.SendRotate(this.light.transform);\\r\\n       
    if (player.state === ZEPETO_Character_Controller_1.CharacterState.JumpIdle ||
    player.state === ZEPETO_Character_Controller_1.CharacterState.JumpMove)\\r\\n           
    zepetoPlayer.character.Jump();\\r\\n        // Scene\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
    \u0133\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD \uFFFD\uFFFD\u0121\uFFFD\uFFFD \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
    \u0133\uFFFD\uFFFD\uFFFD\uFFFD \uFFFD\uFFFD\u0121\uFFFD\uFFFD \uFFFD\uFFFD\uBC2A
    \uFFFD\uFFFD\uFFFD\uFFFD \uFFFD\uFFFD\uFFFD\uFFFD \uFFFD\uFFFD\uFFFD\u0333\uFFFD
    \uFFFD\uFFFD\uFFFD Teleport \uFFFD\u0574\u03F4\uFFFD.\\r\\n        if (UnityEngine.Vector3.Distance(zepetoPlayer.character.transform.position,
    position) > this.allowablePosDiff) {\\r\\n            zepetoPlayer.character.transform.position
    = position;\\r\\n            console.log(`[OnUpdatePlayer] Teleport`);\\r\\n           
    return;\\r\\n        }\\r\\n    }\\r\\n    SendTransform(transform) {\\r\\n       
    const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n        const pos = new
    ZEPETO_Multiplay_1.RoomData();\\r\\n        pos.Add(\\\"x\\\", transform.localPosition.x);\\r\\n       
    pos.Add(\\\"y\\\", transform.localPosition.y);\\r\\n        pos.Add(\\\"z\\\",
    transform.localPosition.z);\\r\\n        data.Add(\\\"position\\\", pos.GetObject());\\r\\n       
    const rot = new ZEPETO_Multiplay_1.RoomData();\\r\\n        rot.Add(\\\"x\\\",
    transform.localEulerAngles.x);\\r\\n        rot.Add(\\\"y\\\", transform.localEulerAngles.y);\\r\\n       
    rot.Add(\\\"z\\\", transform.localEulerAngles.z);\\r\\n        data.Add(\\\"rotation\\\",
    rot.GetObject());\\r\\n        this.room.Send(\\\"onChangedTransform\\\", data.GetObject());\\r\\n   
    }\\r\\n    SendRotate(transform) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    const rot = new ZEPETO_Multiplay_1.RoomData();\\r\\n        rot.Add(\\\"x\\\",
    transform.localEulerAngles.x);\\r\\n        rot.Add(\\\"y\\\", transform.localEulerAngles.y);\\r\\n       
    rot.Add(\\\"z\\\", transform.localEulerAngles.z);\\r\\n        data.Add(\\\"rotation\\\",
    rot.GetObject());\\r\\n        this.room.Send(\\\"onChangedRotate\\\", data.GetObject());\\r\\n   
    }\\r\\n    SendState(state) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    data.Add(\\\"state\\\", state);\\r\\n        this.room.Send(\\\"onChangedState\\\",
    data.GetObject());\\r\\n    }\\r\\n    ParseVector3(vector3) {\\r\\n        return
    new UnityEngine.Vector3(vector3.x, vector3.y, vector3.z);\\r\\n    }\\r\\n   
    SendTeleport(pos) {\\r\\n        console.log(`[SendTeleport] check`);\\r\\n       
    console.log(`[SendTeleport] players - sessionId : ${this.room.SessionId}`);\\r\\n       
    if (this.room != null && this.room.IsConnected) {\\r\\n            const hasPlayer
    = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(this.room.SessionId);\\r\\n           
    if (hasPlayer) {\\r\\n                console.log(`[hasPlayer] check`);\\r\\n               
    const myPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(this.room.SessionId);\\r\\n               
    if (myPlayer.character.CurrentState != ZEPETO_Character_Controller_1.CharacterState.Idle)\\r\\n                   
    console.log(`[myPlayer.character.CurrentState != CharacterState.Idle] check`);\\r\\n               
    myPlayer.character.Teleport(pos, UnityEngine.Quaternion.identity);\\r\\n               
    this.SendTransform(myPlayer.character.transform);\\r\\n            }\\r\\n       
    }\\r\\n        else {\\r\\n            const hasPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(this.room.SessionId);\\r\\n           
    if (hasPlayer) {\\r\\n                console.log(`[else hasPlayer] check`);\\r\\n               
    const myPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(this.room.SessionId);\\r\\n               
    myPlayer.character.Teleport(pos, UnityEngine.Quaternion.identity);\\r\\n           
    }\\r\\n        }\\r\\n    }\\r\\n    AddMessageHandlersForCharacterSync() {\\r\\n       
    // Send a message for when the characte ralls off the block. \\r\\n        this.room.AddMessageHandler(this.MESSAGE_TYPE_OnFallTriggerEnter,
    (message) => {\\r\\n            const sessionId = message.toString();\\r\\n           
    const hasPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.HasPlayer(sessionId);\\r\\n           
    // Character respawn. \\r\\n            if (hasPlayer) {\\r\\n               
    this.StartCoroutine(this.RespwanCharacter(sessionId));\\r\\n            }\\r\\n       
    });\\r\\n    }\\r\\n    /*\\r\\n    When the character falls, respawn the character
    at the respawn point.\\r\\n    */\\r\\n    *RespwanCharacter(sessionId) {\\r\\n       
    const myPlayer = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(sessionId);\\r\\n       
    myPlayer.character.enabled = false;\\r\\n        while (true) {\\r\\n           
    myPlayer.character.gameObject.transform.SetPositionAndRotation(new UnityEngine.Vector3(762.0,
    20.0, 150.0), UnityEngine.Quaternion.identity);\\r\\n            myPlayer.character.enabled
    = true;\\r\\n            yield null;\\r\\n        }\\r\\n    }\\r\\n    // ------------------------
    Funcions Necessary for sending messages to the server ------------------------\\r\\n   
    /* SendOnTryJumpForMovingToBlock()\\r\\n       - When the character attemps a
    move from a platform to a moving block.\\r\\n    */\\r\\n    SendOnTryJumpForMovingToBlock(position,
    platformPosition) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    const relativePos = new ZEPETO_Multiplay_1.RoomData();\\r\\n        const platformPos
    = new ZEPETO_Multiplay_1.RoomData();\\r\\n        relativePos.Add(\\\"x\\\",
    position.x);\\r\\n        relativePos.Add(\\\"y\\\", position.y);\\r\\n       
    relativePos.Add(\\\"z\\\", position.z);\\r\\n        data.Add(\\\"relativePos\\\",
    relativePos.GetObject());\\r\\n        platformPos.Add(\\\"x\\\", platformPosition.x);\\r\\n       
    platformPos.Add(\\\"y\\\", platformPosition.y);\\r\\n        platformPos.Add(\\\"z\\\",
    platformPosition.z);\\r\\n        data.Add(\\\"platformPos\\\", platformPos.GetObject());\\r\\n       
    this.room.Send(this.MESSAGE_TYPE_OnTryJumpForMovingToBlock, data.GetObject());\\r\\n   
    }\\r\\n    /* SendOnBlockTriggerEnter()\\r\\n       - When the enters a moving
    block trigger.\\r\\n    */\\r\\n    SendOnBlockTriggerEnter(blockIdx) {\\r\\n       
    this.room.Send(this.MESSAGE_TYPE_OnBlockTriggerEnter, blockIdx);\\r\\n    }\\r\\n   
    /* SendOnBlockTriggerExit()\\r\\n       - When the player exits a moving block
    trigger.\\r\\n    */\\r\\n    SendOnBlockTriggerExit(blockIdx, relativePosition)
    {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n        data.Add(\\\"blockIdx\\\",
    blockIdx);\\r\\n        const relativePos = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    relativePos.Add(\\\"x\\\", relativePosition.x);\\r\\n        relativePos.Add(\\\"y\\\",
    relativePosition.y);\\r\\n        relativePos.Add(\\\"z\\\", relativePosition.z);\\r\\n       
    data.Add(\\\"relativePos\\\", relativePos.GetObject());\\r\\n        this.room.Send(this.MESSAGE_TYPE_OnCharacterJumpOnBlock,
    data.GetObject());\\r\\n    }\\r\\n    /* SendOnLandedBlock()\\r\\n       - Send
    relative position vectors when the local player lands on a block.\\r\\n    */\\r\\n   
    SendOnLandedBlock(blockIdx, relativeVector) {\\r\\n        const data = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    data.Add(\\\"blockIdx\\\", blockIdx);\\r\\n        const relativePos = new ZEPETO_Multiplay_1.RoomData();\\r\\n       
    relativePos.Add(\\\"x\\\", relativeVector.x);\\r\\n        relativePos.Add(\\\"y\\\",
    relativeVector.y);\\r\\n        relativePos.Add(\\\"z\\\", relativeVector.z);\\r\\n       
    data.Add(\\\"relativePos\\\", relativePos.GetObject());\\r\\n        this.room.Send(this.MESSAGE_TYPE_OnCharacterLandedBlock,
    data.GetObject());\\r\\n    }\\r\\n    /* SendOnPlatformState()\\r\\n       -
    When the local character lands on a platform, send the relative position as a
    vector.\\r\\n    */\\r\\n    SendOnPlatformState() {\\r\\n        this.room.Send(this.MESSAGE_TYPE_OnPlatformState);\\r\\n   
    }\\r\\n    /* SendOnFallTriggerEnter()\\r\\n       - When the local character
    falls, send a message to the server.\\r\\n    */\\r\\n    SendOnFallTriggerEnter()
    {\\r\\n        this.room.Send(this.MESSAGE_TYPE_OnFallTriggerEnter);\\r\\n       
    console.log(`[multi SendOnFallTriggerEnter Room.Send() ]`);\\r\\n    }\\r\\n   
    /* SendTryJump()\\r\\n       - Whent he local character jumps from a block.\\r\\n   
    */\\r\\n    SendTryJump(isJumping) {\\r\\n        this.room.Send(this.MESSAGE_TYPE_OnTryJump,
    isJumping);\\r\\n    }\\r\\n}\\r\\nexports.default = Starter;\\r\\n//# sourceMappingURL=data:application/json;base64,\",\"assetPath\":\"Assets/Zepeto/ZepetoScripts/Multiplay/ClientStarter.ts\",\"manifest\":{\"properties\":[{\"assembly\":\"ZEPETO.World\",\"name\":\"multiplay\",\"type\":\"ZEPETO.World.ZepetoWorldMultiplay\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]},{\"assembly\":\"UnityEngine.CoreModule\",\"name\":\"light\",\"type\":\"UnityEngine.GameObject\",\"isArray\":false,\"initValue\":[],\"enumKeys\":[],\"enumValues\":[],\"attributes\":[]}],\"name\":\"Starter\",\"description\":\"\"},\"isCompiled\":true}"
  typescriptHash: b10839a09d4612cd609ab950d117a3c7
  onlyWriteTrigger: 0
